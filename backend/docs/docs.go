// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "AurisTFG",
            "url": "https://github.com/AurisTFG"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Log in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in",
                "parameters": [
                    {
                        "description": "Log in details",
                        "name": "loginDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Log out",
                "tags": [
                    "auth"
                ],
                "summary": "Log out",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "description": "Get current user",
                "tags": [
                    "auth"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.UserDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh token",
                "tags": [
                    "auth"
                ],
                "summary": "Refresh token",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Sign up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "description": "Sign up details",
                        "name": "signUpDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SignupDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/leagues": {
            "get": {
                "description": "Get all leagues",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Get all leagues",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.LeagueDto"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Create a league",
                "parameters": [
                    {
                        "description": "League object that needs to be created",
                        "name": "league",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateLeagueDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/leagues/{leagueId}": {
            "get": {
                "description": "Get a league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Get a league",
                "parameters": [
                    {
                        "type": "string",
                        "default": "0deecf6a-289b-49a0-8f1b-9bc4185f99df",
                        "description": "League ID",
                        "name": "leagueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.LeagueDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Delete a league",
                "parameters": [
                    {
                        "type": "string",
                        "default": "0deecf6a-289b-49a0-8f1b-9bc4185f99df",
                        "description": "League ID",
                        "name": "leagueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Update a league",
                "parameters": [
                    {
                        "type": "string",
                        "default": "0deecf6a-289b-49a0-8f1b-9bc4185f99df",
                        "description": "League ID",
                        "name": "leagueId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "League object that needs to be updated",
                        "name": "league",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateLeagueDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/matchmaking/matches": {
            "get": {
                "description": "Get all matches",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matches"
                ],
                "summary": "Get all matches",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.MatchDto"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/matchmaking/matches/end": {
            "post": {
                "description": "End a match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matches"
                ],
                "summary": "End a match",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/matchmaking/queues": {
            "get": {
                "description": "Get all queues",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Get all queues",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.QueueDto"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/matchmaking/queues/join": {
            "post": {
                "description": "Join matchmaking queue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matchmaking"
                ],
                "summary": "Join matchmaking queue",
                "parameters": [
                    {
                        "description": "Join Queue DTO",
                        "name": "result",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.JoinQueueDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/matchmaking/queues/leave": {
            "post": {
                "description": "Leave matchmaking queue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matchmaking"
                ],
                "summary": "Leave matchmaking queue",
                "parameters": [
                    {
                        "description": "Leave Queue DTO",
                        "name": "result",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LeaveQueueDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/players": {
            "get": {
                "description": "Get all players",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get all players",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.PlayerMinimalDto"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/results": {
            "get": {
                "description": "Get all results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Get all results",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.ResultDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Create a result",
                "parameters": [
                    {
                        "description": "Result object that needs to be created",
                        "name": "result",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateResultDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/results/{resultId}": {
            "get": {
                "description": "Get a result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Get a result",
                "parameters": [
                    {
                        "type": "string",
                        "default": "0deecf6a-289b-49a0-8f1b-9bc4185f99df",
                        "description": "Result ID",
                        "name": "resultId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.ResultDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Delete a result",
                "parameters": [
                    {
                        "type": "string",
                        "default": "0deecf6a-289b-49a0-8f1b-9bc4185f99df",
                        "description": "Result ID",
                        "name": "resultId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "results"
                ],
                "summary": "Update a result",
                "parameters": [
                    {
                        "type": "string",
                        "default": "0deecf6a-289b-49a0-8f1b-9bc4185f99df",
                        "description": "Result ID",
                        "name": "resultId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Result object that needs to be updated",
                        "name": "result",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateResultDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/teams": {
            "get": {
                "description": "Get all teams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Get all teams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.TeamDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Create a team",
                "parameters": [
                    {
                        "description": "Team object that needs to be created",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateTeamDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/teams/{teamId}": {
            "get": {
                "description": "Get a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Get a team",
                "parameters": [
                    {
                        "type": "string",
                        "default": "0deecf6a-289b-49a0-8f1b-9bc4185f99df",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.TeamDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Delete a team",
                "parameters": [
                    {
                        "type": "string",
                        "default": "0deecf6a-289b-49a0-8f1b-9bc4185f99df",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Update a team",
                "parameters": [
                    {
                        "type": "string",
                        "default": "0deecf6a-289b-49a0-8f1b-9bc4185f99df",
                        "description": "Team ID",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Team object that needs to be updated",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateTeamDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/trackmania/oauth/callback": {
            "get": {
                "description": "Handle Trackmania OAuth callback",
                "tags": [
                    "trackmania"
                ],
                "summary": "Handle Trackmania OAuth callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "State parameter",
                        "name": "state",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/trackmania/oauth/url": {
            "get": {
                "description": "Start Trackmania OAuth flow",
                "tags": [
                    "trackmania"
                ],
                "summary": "Start Trackmania OAuth flow",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.TrackmaniaOAuthUrlDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.UserMinimalDto"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.UserMinimalDto"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "leagues.LeagueMinimalDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "logoUrl": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "Summer 2025"
                }
            }
        },
        "players.PlayerMinimalDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "526432ea-822b-4b5b-b1b3-34e8ab453e03"
                },
                "profilePhotoUrl": {
                    "type": "string",
                    "example": "https://example.com/profile.jpg"
                },
                "trackmaniaName": {
                    "type": "string",
                    "example": "JohnDoe"
                }
            }
        },
        "requests.CreateLeagueDto": {
            "type": "object",
            "required": [
                "endDate",
                "name",
                "startDate",
                "trackIds"
            ],
            "properties": {
                "endDate": {
                    "type": "string",
                    "example": "2025-08-31T00:00:000Z"
                },
                "logoUrl": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Summer 2025"
                },
                "startDate": {
                    "type": "string",
                    "example": "2025-06-01T00:00:000Z"
                },
                "trackIds": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "550e8400-e29b-41d4-a716-446655440000"
                    ]
                }
            }
        },
        "requests.CreateResultDto": {
            "type": "object",
            "required": [
                "endDate",
                "leagueId",
                "opponentTeamId",
                "startDate",
                "teamId"
            ],
            "properties": {
                "endDate": {
                    "type": "string",
                    "example": "2025-08-31T00:00:000Z"
                },
                "leagueId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "opponentScore": {
                    "type": "string",
                    "example": "14"
                },
                "opponentTeamId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "score": {
                    "type": "string",
                    "example": "16"
                },
                "startDate": {
                    "type": "string",
                    "example": "2025-06-01T00:00:000Z"
                },
                "teamId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "requests.CreateTeamDto": {
            "type": "object",
            "required": [
                "leagueIds",
                "name",
                "playerIds"
            ],
            "properties": {
                "leagueIds": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "550e8400-e29b-41d4-a716-446655440000"
                    ]
                },
                "logoUrl": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "BIG Clan"
                },
                "playerIds": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "550e8400-e29b-41d4-a716-446655440000"
                    ]
                }
            }
        },
        "requests.JoinQueueDto": {
            "type": "object",
            "required": [
                "leagueId",
                "teamId"
            ],
            "properties": {
                "leagueId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                }
            }
        },
        "requests.LeaveQueueDto": {
            "type": "object",
            "required": [
                "leagueId",
                "teamId"
            ],
            "properties": {
                "leagueId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                }
            }
        },
        "requests.LoginDto": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "VeryStrongPassword"
                }
            }
        },
        "requests.SignupDto": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8,
                    "example": "VeryStrongPassword"
                },
                "username": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "john_doe_123"
                }
            }
        },
        "requests.UpdateLeagueDto": {
            "type": "object",
            "required": [
                "endDate",
                "name",
                "startDate",
                "trackIds"
            ],
            "properties": {
                "endDate": {
                    "type": "string",
                    "example": "2025-08-31T00:00:000Z"
                },
                "logoUrl": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Summer 2025"
                },
                "startDate": {
                    "type": "string",
                    "example": "2025-06-01T00:00:000Z"
                },
                "trackIds": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "550e8400-e29b-41d4-a716-446655440000"
                    ]
                }
            }
        },
        "requests.UpdateResultDto": {
            "type": "object",
            "required": [
                "endDate",
                "leagueId",
                "opponentTeamId",
                "startDate",
                "teamId"
            ],
            "properties": {
                "endDate": {
                    "type": "string",
                    "example": "2025-08-31T00:00:000Z"
                },
                "leagueId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "opponentScore": {
                    "type": "string",
                    "example": "14"
                },
                "opponentTeamId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "score": {
                    "type": "string",
                    "example": "16"
                },
                "startDate": {
                    "type": "string",
                    "example": "2025-06-01T00:00:000Z"
                },
                "teamId": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "requests.UpdateTeamDto": {
            "type": "object",
            "required": [
                "leagueIds",
                "name",
                "playerIds"
            ],
            "properties": {
                "leagueIds": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "550e8400-e29b-41d4-a716-446655440000"
                    ]
                },
                "logoUrl": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "BIG Clan"
                },
                "playerIds": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "550e8400-e29b-41d4-a716-446655440000"
                    ]
                }
            }
        },
        "responses.ErrorDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error message"
                }
            }
        },
        "responses.LeagueDto": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string",
                    "example": "2025-08-31T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "logoUrl": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "Summer 2025"
                },
                "startDate": {
                    "type": "string",
                    "example": "2025-06-01T00:00:00Z"
                },
                "tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/trackmaniatracks.TrackmaniaTrackDto"
                    }
                },
                "user": {
                    "$ref": "#/definitions/users.UserMinimalDto"
                }
            }
        },
        "responses.MatchDto": {
            "type": "object",
            "properties": {
                "gameMode": {
                    "type": "string",
                    "example": "2v2"
                },
                "id": {
                    "type": "string",
                    "example": "b2c4f3e0-5d8a-4c1b-9f3e-7a1d2f3e4b5c"
                },
                "league": {
                    "$ref": "#/definitions/leagues.LeagueMinimalDto"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/teams.TeamMinimalDto"
                    }
                }
            }
        },
        "responses.PlayerMinimalDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "526432ea-822b-4b5b-b1b3-34e8ab453e03"
                },
                "profilePhotoUrl": {
                    "type": "string",
                    "example": "https://example.com/profile.jpg"
                },
                "trackmaniaName": {
                    "type": "string",
                    "example": "JohnDoe"
                }
            }
        },
        "responses.QueueDto": {
            "type": "object",
            "properties": {
                "gameMode": {
                    "type": "string",
                    "example": "2v2"
                },
                "id": {
                    "type": "string",
                    "example": "b2c4f3e0-5d8a-4c1b-9f3e-7a1d2f3e4b5c"
                },
                "league": {
                    "$ref": "#/definitions/leagues.LeagueMinimalDto"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/teams.TeamMinimalDto"
                    }
                }
            }
        },
        "responses.ResultDto": {
            "type": "object",
            "properties": {
                "eloDiff": {
                    "type": "integer",
                    "example": 15
                },
                "endDate": {
                    "type": "string",
                    "example": "2025-06-01T00:40:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "league": {
                    "$ref": "#/definitions/leagues.LeagueMinimalDto"
                },
                "newElo": {
                    "type": "integer",
                    "example": 1500
                },
                "newOpponentElo": {
                    "type": "integer",
                    "example": 1492
                },
                "opponentEloDiff": {
                    "type": "integer",
                    "example": -8
                },
                "opponentScore": {
                    "type": "integer",
                    "example": 0
                },
                "opponentTeam": {
                    "$ref": "#/definitions/teams.TeamMinimalDto"
                },
                "score": {
                    "type": "integer",
                    "example": 4
                },
                "startDate": {
                    "type": "string",
                    "example": "2025-06-01T00:00:00Z"
                },
                "team": {
                    "$ref": "#/definitions/teams.TeamMinimalDto"
                },
                "user": {
                    "$ref": "#/definitions/users.UserMinimalDto"
                }
            }
        },
        "responses.TeamDto": {
            "type": "object",
            "properties": {
                "elo": {
                    "type": "integer",
                    "example": 1200
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "leagues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/leagues.LeagueMinimalDto"
                    }
                },
                "logoUrl": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "BIG Clan"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/players.PlayerMinimalDto"
                    }
                },
                "user": {
                    "$ref": "#/definitions/users.UserMinimalDto"
                }
            }
        },
        "responses.TrackmaniaOAuthUrlDto": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "responses.UserDto": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string",
                    "example": "FR"
                },
                "email": {
                    "type": "string",
                    "example": "email@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "526432ea-822b-4b5b-b1b3-34e8ab453e03"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "profilePhotoUrl": {
                    "type": "string",
                    "example": "https://example.com/profile.jpg"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/roles.RoleDto"
                    }
                },
                "trackmaniaId": {
                    "type": "string",
                    "example": "526432ea-822b-4b5b-b1b3-34e8ab453e03"
                },
                "trackmaniaName": {
                    "type": "string",
                    "example": "JohnDoe"
                },
                "tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/trackmaniatracks.TrackmaniaTrackDto"
                    }
                },
                "username": {
                    "type": "string",
                    "example": "john_doe_123"
                }
            }
        },
        "responses.UserMinimalDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "526432ea-822b-4b5b-b1b3-34e8ab453e03"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe_123"
                }
            }
        },
        "roles.RoleDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "teams.TeamMinimalDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "logoUrl": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "BIG Clan"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/players.PlayerMinimalDto"
                    }
                }
            }
        },
        "trackmaniatracks.TrackmaniaTrackDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "thumbnailUrl": {
                    "type": "string"
                }
            }
        },
        "users.UserMinimalDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "526432ea-822b-4b5b-b1b3-34e8ab453e03"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe_123"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "MatchMania API",
	Description:      "Documentation for MatchMania API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
